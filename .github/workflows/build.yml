name: Build

on:
  workflow_call:

permissions:
  contents: read

env:
  HOMEBREW_DEVELOPER: 1
  HOMEBREW_NO_AUTO_UPDATE: 1
  HOMEBREW_TEST_TIMEOUT_SECS: 1800

jobs:
  build:
    strategy:
      matrix:
        include:
          - arch: x86_64
            image: ghcr.io/homebrew/ubuntu22.04:master
          - arch: aarch64
            image: zhongruoyu/homebrew-aarch64-linux:ubuntu22.04
      fail-fast: false
    runs-on: ubuntu-22.04
    defaults:
      run:
        shell: docker exec linuxbrew bash --noprofile --norc -eo pipefail {0}
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up container
        run: |
          docker create \
            --name=linuxbrew \
            --env=GITHUB_ACTIONS=true \
            --env=GITHUB_BASE_REF="$GITHUB_BASE_REF" \
            --env=GITHUB_EVENT_NAME="$GITHUB_EVENT_NAME" \
            --env=GITHUB_OUTPUT="$GITHUB_OUTPUT" \
            --env=GITHUB_REF="$GITHUB_REF" \
            --env=GITHUB_REPOSITORY="$GITHUB_REPOSITORY" \
            --env=GITHUB_REPOSITORY_OWNER="$GITHUB_REPOSITORY_OWNER" \
            --env=GITHUB_SHA="$GITHUB_SHA" \
            --env=CI=true \
            --env=HOMEBREW_DEVELOPER="$HOMEBREW_DEVELOPER" \
            --env=HOMEBREW_NO_AUTO_UPDATE="$HOMEBREW_NO_AUTO_UPDATE" \
            --env=HOMEBREW_TEST_TIMEOUT_SECS="$HOMEBREW_TEST_TIMEOUT_SECS" \
            --platform='linux/${{matrix.arch}}' \
            --mount=type=bind,src=/home/runner,dst=/home/runner \
            --workdir='${{github.workspace}}' \
            --entrypoint=tail \
            ${{matrix.image}} \
            -f /dev/null
          docker start linuxbrew
        shell: bash

      - name: Set up Homebrew tap repository
        run: |
          setfacl -Rm "d:u:linuxbrew:rwX,u:linuxbrew:rwX" /home/runner
          HOMEBREW_TAP_REPOSITORY="$(brew --repo)/Library/Taps/$(echo '${{github.repository}}' | tr "[:upper:]" "[:lower:]")"
          mkdir -vp "${HOMEBREW_TAP_REPOSITORY%/*}"
          ln -vs '${{github.workspace}}' "$HOMEBREW_TAP_REPOSITORY"
          chown -vR linuxbrew:linuxbrew '${{github.workspace}}'
        shell: docker exec --user=root linuxbrew bash --noprofile --norc -eo pipefail {0}

      - name: Set up Homebrew tap
        run: |
          git init
          git remote add origin 'https://github.com/${{github.repository}}'
          git fetch origin '${{github.sha}}' '+refs/heads/*:refs/remotes/origin/*'
          git remote set-head origin --auto
          head="$(git symbolic-ref refs/remotes/origin/HEAD)"
          head="${head#refs/remotes/origin/}"
          git checkout --force -B "$head" FETCH_HEAD

      - run: brew test-bot --only-cleanup-before

      - run: brew test-bot --only-setup${{matrix.arch == 'aarch64' && ' || true' || ''}}

      - name: Set up GNU tar for bottling
        if: matrix.arch == 'aarch64'
        run: |
          brew setup-gnu-tar

      - name: Build Portable Ruby
        run: |
          mkdir -p bottle/
          cd bottle
          brew portable-package --verbose portable-ruby

      - name: Upload Portable Ruby
        uses: actions/upload-artifact@v4
        with:
          name: bottles_${{matrix.arch}}
          path: bottle

      - name: Test Portable Ruby
        run: |
          cd
          mkdir -p portable-ruby/
          tar --strip-components 2 -C portable-ruby -xf '${{github.workspace}}'/bottle/portable-ruby--*.tar.gz
          export PATH="${PWD}/portable-ruby/bin:${PATH}"
          export HOMEBREW_USE_RUBY_FROM_PATH=1
          rm -rf "$(brew --repo)/Library/Homebrew/vendor/portable-ruby"
          brew config | awk -v s="${PWD}/portable-ruby/bin/ruby" '$0~s{r=1} 1; END{exit(!r)}'

      - name: Stop container
        if: always()
        run: |
          docker rm --force linuxbrew
        shell: bash
